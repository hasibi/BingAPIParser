<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>entities</groupId>
	<artifactId>bingSearch</artifactId>
	<version>0.14.01-SNAPSHOT</version>

	<name>bingSearch</name>
	<description>bingSearch</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<slf4j.version>1.6.5</slf4j.version>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>clojars</id>
			<url>https://clojars.org/repo</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>apache.snapshots</id>
			<url>http://repository.apache.org/content/repositories/snapshots/</url>
		</repository>

		<!-- Dirty workaround for files not sitting in a maven repo. -->
		<repository>
			<id>project-local-repo</id>
			<name>project</name>
			<url>file:${project.basedir}/local-repo</url>
		</repository>
	</repositories>

	<dependencies>

		<dependency><!--There is a conflict with slf4j -->
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>
		
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.7</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering> <!-- replace instances of ${variableName} with the correpsonding values. -->
				<includes>
					<include>**/*.properties</include> <!-- filtering for properties files -->
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude> <!-- no filtering for everything else -->
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<fork>true</fork>
					<source>1.7</source>
					<target>1.7</target>
					<debug>true</debug> <!-- without this, projects using this project cannot debug -->
				</configuration>
			</plugin>

			<!-- bind the maven-assembly-plugin to the package phase. this will create 
				a jar file without the storm dependencies, suitable for deployment to a cluster. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>com.yahoo.sundog.RunOnCluster</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>conf</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>